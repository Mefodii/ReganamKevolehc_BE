# Generated by Django 5.0.6 on 2024-07-25 05:27

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('listening', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('Music', 'Music'), ('Fun', 'Fun'), ('Game', 'Game'), ('Tech', 'Tech'), ('Other', 'Other')], max_length=50)),
                ('migration_position', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='ContentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('item_id', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=500)),
                ('title', models.CharField(max_length=500)),
                ('file_name', models.CharField(blank=True, max_length=500)),
                ('download_status', models.CharField(choices=[('NONE', 'NONE'), ('PENDING', 'PENDING'), ('DOWNLOADING', 'DOWNLOADING'), ('DOWNLOADED', 'DOWNLOADED'), ('UNABLE', 'UNABLE'), ('MISSING', 'MISSING'), ('SKIP', 'SKIP')], max_length=50)),
                ('published_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('consumed', models.BooleanField()),
                ('content_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_items', to='contenting.contentlist')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentMusicItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('item_id', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=500)),
                ('title', models.CharField(max_length=500)),
                ('file_name', models.CharField(blank=True, max_length=500)),
                ('download_status', models.CharField(choices=[('NONE', 'NONE'), ('PENDING', 'PENDING'), ('DOWNLOADING', 'DOWNLOADING'), ('DOWNLOADED', 'DOWNLOADED'), ('UNABLE', 'UNABLE'), ('MISSING', 'MISSING'), ('SKIP', 'SKIP')], max_length=50)),
                ('published_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('Single', 'Single'), ('Playlist', 'Playlist'), ('NotMusic', 'NotMusic'), ('Unknown', 'Unknown')], max_length=50)),
                ('comment', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('parsed', models.BooleanField(default=False)),
                ('content_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_music_items', to='contenting.contentlist')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('title', models.CharField(max_length=300)),
                ('start_time', models.IntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('duration', models.IntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('comment', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('needs_edit', models.BooleanField()),
                ('is_track', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('content_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='contenting.contentmusicitem')),
                ('track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='content_tracks', to='listening.track')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentWatcher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('Music', 'Music'), ('Fun', 'Fun'), ('Game', 'Game'), ('Tech', 'Tech'), ('Other', 'Other')], max_length=50)),
                ('watcher_id', models.CharField(max_length=200)),
                ('source_type', models.CharField(choices=[('Youtube', 'Youtube'), ('Bandcamp', 'Bandcamp'), ('Other', 'Other')], max_length=50)),
                ('status', models.CharField(choices=[('Waiting', 'Waiting'), ('Running', 'Running'), ('Finished', 'Finished'), ('Warning', 'Warning'), ('Error', 'Error'), ('Dead', 'Dead'), ('Ignore', 'Ignore'), ('None', 'None')], max_length=50)),
                ('check_date', models.DateTimeField(default=datetime.datetime(2001, 1, 1, 0, 0, tzinfo=datetime.timezone.utc))),
                ('download', models.BooleanField()),
                ('file_extension', models.CharField(blank=True, choices=[('mkv', 'mkv'), ('mp4', 'mp4'), ('mp3', 'mp3'), ('m4a', 'm4a')], default='', max_length=50, null=True)),
                ('video_quality', models.IntegerField(choices=[(-1, -1), (720, 720), (1080, 1080)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('content_list', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='content_watcher', to='contenting.contentlist')),
            ],
        ),
    ]
