# Generated by Django 4.2.7 on 2024-05-19 08:49

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('listening', '0005_artist_display_name_release_display_name_and_more'),
        ('contenting', '0008_contentwatcher_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentMusicItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.CharField(max_length=100)),
                ('url', models.CharField(blank=True, max_length=500, null=True)),
                ('title', models.CharField(max_length=500)),
                ('file_name', models.CharField(blank=True, max_length=500, null=True)),
                ('position', models.IntegerField(default=1)),
                ('download_status', models.CharField(choices=[('NONE', 'NONE'), ('DOWNLOADING', 'DOWNLOADING'), ('DOWNLOADED', 'DOWNLOADED'), ('UNABLE', 'UNABLE'), ('MISSING', 'MISSING'), ('SKIP', 'SKIP')], max_length=50)),
                ('published_at', models.DateTimeField(blank=True, default=datetime.datetime(2001, 1, 1, 0, 0), null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('Single', 'Single'), ('Playlist', 'Playlist'), ('NotMusic', 'NotMusic')], max_length=50)),
                ('content_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_song_items', to='contenting.contentlist')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('position', models.IntegerField(default=1)),
                ('start_time', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('duration', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('comment', models.CharField(max_length=200)),
                ('needs_edit', models.BooleanField(default=False)),
                ('like', models.BooleanField(blank=True, default=None, null=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_track', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('content_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_parts', to='contenting.contentmusicitem')),
                ('track', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content_parts', to='listening.track')),
            ],
        ),
        migrations.RenameField(
            model_name='contentitem',
            old_name='inspected',
            new_name='consumed',
        ),
        migrations.RemoveField(
            model_name='contentitem',
            name='parsed',
        ),
        migrations.RemoveField(
            model_name='contentitem',
            name='type',
        ),
        migrations.AddField(
            model_name='contentitem',
            name='url',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='contentitem',
            name='file_name',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.DeleteModel(
            name='ContentItemPart',
        ),
    ]
