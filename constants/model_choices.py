from constants.constants import ALLOWED_VIDEO_QUALITY
from contenting.reganam_tnetnoc.model.file_extension import FileExtension

# ######
# NOTE: These choices are mirrored in FE.
# Make sure when updating here, to also make the change in FE project as well
# ######

CONTENT_CATEGORY_MUSIC = "Music"
CONTENT_CATEGORY_FUN = "Fun"
CONTENT_CATEGORY_GAME = "Game"
CONTENT_CATEGORY_TECH = "Tech"
CONTENT_CATEGORY_OTHER = "Other"

CONTENT_CATEGORY_CHOICES = (
    (CONTENT_CATEGORY_MUSIC, CONTENT_CATEGORY_MUSIC),
    (CONTENT_CATEGORY_FUN, CONTENT_CATEGORY_FUN),
    (CONTENT_CATEGORY_GAME, CONTENT_CATEGORY_GAME),
    (CONTENT_CATEGORY_TECH, CONTENT_CATEGORY_TECH),
    (CONTENT_CATEGORY_OTHER, CONTENT_CATEGORY_OTHER),
)

DOWNLOAD_STATUS_NONE = "NONE"
DOWNLOAD_STATUS_PENDING = "PENDING"
DOWNLOAD_STATUS_DOWNLOADING = "DOWNLOADING"
DOWNLOAD_STATUS_DOWNLOADED = "DOWNLOADED"
DOWNLOAD_STATUS_UNABLE = "UNABLE"
DOWNLOAD_STATUS_MISSING = "MISSING"
DOWNLOAD_STATUS_SKIP = "SKIP"

DOWNLOAD_STATUS_CHOICES = (
    (DOWNLOAD_STATUS_NONE, DOWNLOAD_STATUS_NONE),
    (DOWNLOAD_STATUS_PENDING, DOWNLOAD_STATUS_PENDING),
    (DOWNLOAD_STATUS_DOWNLOADING, DOWNLOAD_STATUS_DOWNLOADING),
    (DOWNLOAD_STATUS_DOWNLOADED, DOWNLOAD_STATUS_DOWNLOADED),
    (DOWNLOAD_STATUS_UNABLE, DOWNLOAD_STATUS_UNABLE),
    (DOWNLOAD_STATUS_MISSING, DOWNLOAD_STATUS_MISSING),
    (DOWNLOAD_STATUS_SKIP, DOWNLOAD_STATUS_SKIP),
)

CONTENT_ITEM_TYPE_SINGLE = "Single"
CONTENT_ITEM_TYPE_PLAYLIST = "Playlist"
CONTENT_ITEM_TYPE_NOT_MUSIC = "NotMusic"

CONTENT_ITEM_TYPE_CHOICES = (
    (CONTENT_ITEM_TYPE_SINGLE, CONTENT_ITEM_TYPE_SINGLE),
    (CONTENT_ITEM_TYPE_PLAYLIST, CONTENT_ITEM_TYPE_PLAYLIST),
    (CONTENT_ITEM_TYPE_NOT_MUSIC, CONTENT_ITEM_TYPE_NOT_MUSIC),
)

CONTENT_WATCHER_SOURCE_TYPE_YOUTUBE = "Youtube"
CONTENT_WATCHER_SOURCE_TYPE_BANDCAMP = "Bandcamp"
CONTENT_WATCHER_SOURCE_TYPE_OTHER = "Other"

CONTENT_WATCHER_SOURCE_TYPE_CHOICES = (
    (CONTENT_WATCHER_SOURCE_TYPE_YOUTUBE, CONTENT_WATCHER_SOURCE_TYPE_YOUTUBE),
    (CONTENT_WATCHER_SOURCE_TYPE_BANDCAMP, CONTENT_WATCHER_SOURCE_TYPE_BANDCAMP),
    (CONTENT_WATCHER_SOURCE_TYPE_OTHER, CONTENT_WATCHER_SOURCE_TYPE_OTHER),
)

FILE_EXTENSION_CHOICES = ((f.value, f.value) for f in FileExtension)

CONTENT_WATCHER_STATUS_WAITING = "Waiting"
CONTENT_WATCHER_STATUS_RUNNING = "Running"
CONTENT_WATCHER_STATUS_FINISHED = "Finished"
CONTENT_WATCHER_STATUS_WARNING = "Warning"
CONTENT_WATCHER_STATUS_ERROR = "Error"
CONTENT_WATCHER_STATUS_DEAD = "Dead"
CONTENT_WATCHER_STATUS_NONE = "None"

CONTENT_WATCHER_STATUS_CHOICES = (
    (CONTENT_WATCHER_STATUS_WAITING, CONTENT_WATCHER_STATUS_WAITING),
    (CONTENT_WATCHER_STATUS_RUNNING, CONTENT_WATCHER_STATUS_RUNNING),
    (CONTENT_WATCHER_STATUS_FINISHED, CONTENT_WATCHER_STATUS_FINISHED),
    (CONTENT_WATCHER_STATUS_WARNING, CONTENT_WATCHER_STATUS_WARNING),
    (CONTENT_WATCHER_STATUS_ERROR, CONTENT_WATCHER_STATUS_ERROR),
    (CONTENT_WATCHER_STATUS_DEAD, CONTENT_WATCHER_STATUS_DEAD),
    (CONTENT_WATCHER_STATUS_NONE, CONTENT_WATCHER_STATUS_NONE),
)

VIDEO_QUALITY_CHOICES = [(quality, str(quality)) for quality in ALLOWED_VIDEO_QUALITY] + [("Default", None)]

WATCHING_TYPE_ANIME = "Anime"
WATCHING_TYPE_MOVIE = "Movie"
WATCHING_TYPE_SERIAL = "Serial"

WATCHING_STATUS_DROPPED = "Dropped"
WATCHING_STATUS_PLANNED = "Planned"
WATCHING_STATUS_IGNORED = "Ignored"
WATCHING_STATUS_PREMIERE = "Premiere"
WATCHING_STATUS_WATCHING = "Watching"
WATCHING_STATUS_FINISHED = "Finished"

WATCHING_AIR_STATUS_ONGOING = "Ongoing"
WATCHING_AIR_STATUS_COMPLETED = "Completed"

WATCHING_TYPE_CHOICES = (
    (WATCHING_TYPE_ANIME, WATCHING_TYPE_ANIME),
    (WATCHING_TYPE_MOVIE, WATCHING_TYPE_MOVIE),
    (WATCHING_TYPE_SERIAL, WATCHING_TYPE_SERIAL),
)

WATCHING_STATUS_CHOICES = (
    (WATCHING_STATUS_DROPPED, WATCHING_STATUS_DROPPED),
    (WATCHING_STATUS_PLANNED, WATCHING_STATUS_PLANNED),
    (WATCHING_STATUS_IGNORED, WATCHING_STATUS_IGNORED),
    (WATCHING_STATUS_PREMIERE, WATCHING_STATUS_PREMIERE),
    (WATCHING_STATUS_WATCHING, WATCHING_STATUS_WATCHING),
    (WATCHING_STATUS_FINISHED, WATCHING_STATUS_FINISHED),
)

WATCHING_AIR_STATUS_CHOICES = (
    (WATCHING_AIR_STATUS_ONGOING, WATCHING_AIR_STATUS_ONGOING),
    (WATCHING_AIR_STATUS_COMPLETED, WATCHING_AIR_STATUS_COMPLETED),
)
